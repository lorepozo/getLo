)]}'
{"version":3,"file":"/packages/accounts-ui-unstyled.js","sources":["accounts-ui-unstyled/accounts_ui.js","accounts-ui-unstyled/login_buttons.html","accounts-ui-unstyled/login_buttons_single.html","accounts-ui-unstyled/login_buttons_dropdown.html","accounts-ui-unstyled/login_buttons_dialogs.html","accounts-ui-unstyled/login_buttons_session.js","accounts-ui-unstyled/login_buttons.js","accounts-ui-unstyled/login_buttons_single.js","accounts-ui-unstyled/login_buttons_dropdown.js","accounts-ui-unstyled/login_buttons_dialogs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iB;;AAEA,wB;AACA,yB;AACA,yB;AACA,E;;AAEA,wC;AACA,0B;AACA,yF;AACA,0C;AACA,qC;AACA,iE;AACA,K;;AAEA,qC;AACA,qC;AACA,oB;AACA,2B;AACA,oC;AACA,sB;AACA,kB;AACA,uC;AACA,oD;AACA,+F;AACA,U;AACA,iF;AACA,Y;AACA,wH;AACA,K;AACA,G;;AAEA,mC;AACA,mC;AACA,kE;AACA,6D;AACA,4G;AACA,6C;AACA,+F;AACA,c;AACA,iE;AACA,O;AACA,O;AACA,G;;AAEA,oC;AACA,oC;AACA,mE;AACA,+B;AACA,oH;;AAEA,8D;AACA,6G;AACA,c;AACA,kE;AACA,O;AACA,O;AACA,G;AACA,E;;AAEA,oC;AACA,mE;AACA,E;;;;;;;;;;;;;;;;;;;;;AC7DA,iD;AACA,kB;AACA,sB;AACA,mB;AACA,wB;AACA,4D;AACA,sD;AACA,O;AACA,iC;AACA,sD;AACA,0B;AACA,oB;AACA,2C;AACA,sD;AACA,4B;AACA,sB;AACA,yD;AACA,uD;AACA,8B;AACA,wB;AACA,kH;AACA,+B;AACA,wB;AACA,2C;AACA,uD;AACA,gJ;AACA,wB;AACA,6B;AACA,sB;AACA,2G;AACA,oB;AACA,2B;AACA,oB;AACA,sG;AACA,e;AACA,I;;AAEA,0D;AACA,kB;AACA,sB;AACA,2B;AACA,mD;AACA,0B;AACA,oB;AACA,yG;AACA,2B;AACA,oB;AACA,iC;AACA,mD;AACA,0H;AACA,M;AACA,I;;AAEA,2D;AACA,kB;AACA,sB;AACA,2B;AACA,mD;AACA,0B;AACA,oB;AACA,0C;AACA,gE;AACA,4B;AACA,sB;AACA,6C;AACA,uD;AACA,8B;AACA,wB;AACA,uH;AACA,+B;AACA,wB;AACA,0D;AACA,8D;AACA,gC;AACA,0B;AACA,8C;AACA,yD;AACA,iD;AACA,4D;AACA,kC;AACA,4B;AACA,+I;AACA,mC;AACA,4B;AACA,+I;AACA,+C;AACA,0B;AACA,sB;AACA,kB;AACA,2B;AACA,oB;AACA,iC;AACA,4B;AACA,iD;AACA,M;AACA,I;;AAEA,0D;AACA,kB;AACA,sB;AACA,6B;AACA,uD;AACA,0B;AACA,oB;AACA,iC;AACA,sC;AACA,mB;AACA,6D;AACA,iB;AACA,iC;AACA,sD;AACA,0B;AACA,oB;AACA,iC;AACA,qC;AACA,mB;AACA,4D;AACA,iB;AACA,Q;AACA,I;;AAEA,2D;AACA,kB;AACA,sB;AACA,qN;AACA,I;;AAEA,kE;AACA,kB;AACA,sB;AACA,+B;AACA,mD;AACA,0B;AACA,oB;AACA,uC;AACA,sC;AACA,6B;AACA,kD;AACA,mC;AACA,gC;AACA,qB;AACA,qB;AACA,c;AACA,6B;AACA,2B;AACA,oB;AACA,uC;AACA,sC;AACA,iB;AACA,M;AACA,I;;;;;;;;;;;;;;;;;;;;ACtJA,4E;AACA,kB;AACA,sB;AACA,mB;AACA,oC;AACA,yB;AACA,0E;AACA,uD;AACA,4B;AACA,sB;AACA,gC;AACA,U;AACA,wC;AACA,qD;AACA,O;AACA,2B;AACA,2B;AACA,8C;AACA,qD;AACA,O;AACA,oC;AACA,qD;AACA,0B;AACA,oB;AACA,sC;AACA,iE;AACA,uD;AACA,S;AACA,oC;AACA,gE;AACA,qB;AACA,2B;AACA,oB;AACA,sC;AACA,mE;AACA,uD;AACA,S;AACA,iC;AACA,gE;AACA,+B;AACA,0B;AACA,I;;AAEA,4E;AACA,kB;AACA,sB;AACA,mB;AACA,oC;AACA,yF;AACA,I;;AAEA,4E;AACA,kB;AACA,sB;AACA,mB;AACA,oC;AACA,yB;AACA,iC;AACA,6B;AACA,0D;AACA,8H;AACA,I;;;;;;;;;;;;;;;;;;;;AC7DA,kE;AACA,kB;AACA,sB;AACA,mB;AACA,2C;AACA,uB;AACA,+B;AACA,yB;AACA,6B;AACA,0D;AACA,gD;AACA,0D;AACA,0B;AACA,oB;AACA,mC;AACA,gC;AACA,gC;AACA,6B;AACA,iC;AACA,yC;AACA,uC;AACA,0C;AACA,8D;AACA,4B;AACA,sB;AACA,+G;AACA,6B;AACA,sB;AACA,iD;AACA,mE;AACA,8B;AACA,wB;AACA,2H;AACA,+B;AACA,wB;AACA,oI;AACA,0B;AACA,iC;AACA,e;AACA,I;;AAEA,yE;AACA,kB;AACA,sB;AACA,6B;AACA,gE;AACA,0B;AACA,oB;AACA,iC;AACA,8B;AACA,8C;AACA,kD;AACA,+K;AACA,I;;AAEA,mE;AACA,kB;AACA,sB;AACA,mB;AACA,4D;AACA,kE;AACA,O;AACA,iC;AACA,0D;AACA,0B;AACA,oB;AACA,yC;AACA,iC;AACA,8B;AACA,2C;AACA,gC;AACA,gC;AACA,6B;AACA,iC;AACA,iD;AACA,sD;AACA,4B;AACA,sB;AACA,gH;AACA,iC;AACA,uC;AACA,2H;AACA,2B;AACA,oB;AACA,2C;AACA,sD;AACA,4B;AACA,sB;AACA,sH;AACA,6B;AACA,sB;AACA,qC;AACA,mC;AACA,gC;AACA,oC;AACA,oB;AACA,e;AACA,I;;AAEA,sE;AACA,kB;AACA,sB;AACA,+B;AACA,mD;AACA,0B;AACA,oB;AACA,yC;AACA,8D;AACA,4B;AACA,sB;AACA,6C;AACA,+D;AACA,8B;AACA,wB;AACA,uI;AACA,mH;AACA,6B;AACA,sB;AACA,yH;AACA,kB;AACA,uC;AACA,6D;AACA,0B;AACA,oB;AACA,iG;AACA,Q;AACA,I;;AAEA,mF;AACA,kB;AACA,sB;AACA,+Q;AACA,I;;AAEA,0E;AACA,kB;AACA,sB;AACA,2B;AACA,+D;AACA,0B;AACA,oB;AACA,+F;AACA,2B;AACA,oB;AACA,iC;AACA,+C;AACA,uC;AACA,mD;AACA,4B;AACA,sB;AACA,4G;AACA,gH;AACA,uD;AACA,kC;AACA,uC;AACA,yD;AACA,4B;AACA,sB;AACA,oD;AACA,6B;AACA,sB;AACA,6C;AACA,sD;AACA,wD;AACA,4B;AACA,sB;AACA,+C;AACA,oE;AACA,8B;AACA,wB;AACA,2C;AACA,8C;AACA,qC;AACA,4B;AACA,oC;AACA,8D;AACA,6C;AACA,qE;AACA,8B;AACA,wB;AACA,2C;AACA,8C;AACA,qC;AACA,qC;AACA,oC;AACA,+D;AACA,wB;AACA,yC;AACA,yD;AACA,4B;AACA,sB;AACA,kH;AACA,6B;AACA,M;AACA,I;;AAEA,wD;AACA,kB;AACA,sB;AACA,mB;AACA,yB;AACA,qhB;AACA,I;;AAEA,iE;AACA,kB;AACA,sB;AACA,2I;AACA,I;;AAEA,2D;AACA,kB;AACA,sB;AACA,2B;AACA,kD;AACA,0B;AACA,oB;AACA,iC;AACA,kC;AACA,4D;AACA,6B;AACA,+B;AACA,kC;AACA,4D;AACA,oB;AACA,qC;AACA,4D;AACA,S;AACA,iC;AACA,2D;AACA,4C;AACA,kC;AACA,4D;AACA,U;AACA,wB;AACA,4D;AACA,O;AACA,4B;AACA,M;AACA,I;;AAEA,gE;AACA,kB;AACA,sB;AACA,+B;AACA,iD;AACA,0B;AACA,oB;AACA,kG;AACA,+N;AACA,I;;;;;;;;;;;;;;;;;;;;AC1PA,oE;AACA,kB;AACA,ke;AACA,M;AACA,wJ;;AAEA,yD;AACA,kB;AACA,sB;AACA,2B;AACA,8D;AACA,0B;AACA,oB;AACA,iC;AACA,gC;AACA,8B;AACA,yD;AACA,+B;AACA,8C;AACA,0C;AACA,kE;AACA,oD;AACA,iC;AACA,wC;AACA,sB;AACA,4H;AACA,uD;AACA,+C;AACA,gE;AACA,gC;AACA,+C;AACA,qB;AACA,sB;AACA,c;AACA,6B;AACA,M;AACA,I;;AAEA,yD;AACA,kB;AACA,sB;AACA,2B;AACA,8D;AACA,0B;AACA,oB;AACA,iC;AACA,gC;AACA,8B;AACA,yD;AACA,+B;AACA,0C;AACA,sC;AACA,uE;AACA,gD;AACA,iC;AACA,oC;AACA,sB;AACA,4H;AACA,uD;AACA,+C;AACA,kE;AACA,gC;AACA,+C;AACA,qB;AACA,sB;AACA,c;AACA,6B;AACA,M;AACA,I;;AAEA,6D;AACA,kB;AACA,sB;AACA,2B;AACA,kD;AACA,0B;AACA,oB;AACA,iC;AACA,yD;AACA,mD;AACA,8B;AACA,wC;AACA,uC;AACA,M;AACA,I;;AAEA,iE;AACA,kB;AACA,sB;AACA,2B;AACA,kD;AACA,0B;AACA,oB;AACA,iC;AACA,2C;AACA,yD;AACA,+P;AACA,gB;AACA,qC;AACA,oC;AACA,gB;AACA,qC;AACA,6D;AACA,gE;AACA,4B;AACA,sB;AACA,uG;AACA,gE;AACA,6D;AACA,W;AACA,qB;AACA,wD;AACA,6F;AACA,6D;AACA,6D;AACA,Y;AACA,oB;AACA,mE;AACA,2D;AACA,4B;AACA,+B;AACA,oE;AACA,0E;AACA,sE;AACA,qB;AACA,sB;AACA,c;AACA,mC;AACA,2E;AACA,2D;AACA,8B;AACA,wB;AACA,uC;AACA,Y;AACA,6D;AACA,qF;AACA,M;AACA,I;;AAEA,gE;AACA,kB;AACA,sB;AACA,2B;AACA,kD;AACA,0B;AACA,oB;AACA,iC;AACA,0D;AACA,wC;AACA,0G;AACA,8B;AACA,0C;AACA,uC;AACA,M;AACA,I;;;;;;;;;;;;;;;;;;;AC3JA,kB;AACA,oB;;AAEA,2E;AACA,iB;AACA,yB;AACA,yB;AACA,sB;;AAEA,iB;AACA,gB;;AAEA,2C;AACA,uB;AACA,uB;AACA,sB;;AAEA,uC;AACA,2C;AACA,2C;AACA,E;;AAEA,kC;AACA,mC;AACA,kE;AACA,E;;AAEA,wC;;AAEA,iE;AACA,mE;AACA,qE;AACA,M;AACA,iC;AACA,6B;AACA,qB;AACA,yD;AACA,uH;;AAEA,0B;AACA,I;;AAEA,8B;AACA,yC;AACA,I;;AAEA,sB;AACA,qB;AACA,yC;AACA,I;;AAEA,8B;AACA,oC;AACA,4C;AACA,4C;AACA,yC;AACA,uC;AACA,yB;AACA,I;;AAEA,kC;AACA,oC;AACA,sC;AACA,gC;AACA,I;;AAEA,mC;AACA,uC;AACA,mC;AACA,gC;AACA,I;;AAEA,mE;AACA,uC;AACA,4C;AACA,uC;AACA,oC;AACA,I;;AAEA,mE;AACA,6D;AACA,iC;AACA,I;AACA,oE;AACA,yD;AACA,oE;AACA,e;AACA,qC;AACA,uC;AACA,wC;AACA,I;;AAEA,8B;AACA,oC;AACA,mC;AACA,I;;AAEA,qC;AACA,yD;AACA,6D;AACA,8D;AACA,G;AACA,E;;;;;;;;;;;;;;;;;;;ACtGA,kB;AACA,wD;;AAEA,0C;AACA,8B;AACA,6C;AACA,+B;AACA,0C;AACA,O;AACA,G;AACA,G;;AAEA,+C;AACA,wE;AACA,G;;AAEA,E;AACA,U;AACA,E;;AAEA,2B;AACA,2B;AACA,Y;AACA,c;;AAEA,wC;AACA,6B;AACA,oB;AACA,yB;AACA,8D;AACA,kC;;AAEA,Y;AACA,E;;AAEA,gE;AACA,mE;AACA,iE;AACA,E;AACA,4E;AACA,sD;AACA,E;AACA,+D;AACA,0D;AACA,8B;AACA,gC;AACA,kB;;AAEA,mC;AACA,gF;;AAEA,+D;AACA,wD;AACA,mB;AACA,kB;;AAEA,oD;AACA,2B;AACA,8B;;AAEA,yC;AACA,wB;AACA,K;AACA,E;;AAEA,kC;AACA,wC;AACA,E;;AAEA,wB;AACA,+D;AACA,E;;AAEA,kE;AACA,E;AACA,+D;AACA,sB;AACA,wC;AACA,6B;AACA,gB;AACA,U;AACA,oF;AACA,iB;AACA,G;AACA,E;AACA,kC;AACA,+E;AACA,gB;;AAEA,kC;AACA,gB;AACA,U;AACA,sD;AACA,iB;AACA,G;AACA,E;AACA,wC;AACA,6B;AACA,gB;AACA,U;AACA,oF;AACA,iB;AACA,G;AACA,E;;AAEA,E;AACA,gC;AACA,E;;AAEA,oD;;AAEA,4D;;AAEA,6D;AACA,oC;AACA,4B;AACA,oB;AACA,oF;AACA,qB;AACA,E;;AAEA,mE;AACA,4C;AACA,E;;;AAGA,E;AACA,gC;AACA,E;;AAEA,gE;AACA,U;AACA,mD;;;;AAIA,E;AACA,kD;AACA,E;;AAEA,2E;;;;AAIA,E;AACA,+B;AACA,E;;AAEA,2D;AACA,iD;AACA,E;;AAEA,0D;AACA,gD;AACA,E;;;AAGA,E;AACA,wC;AACA,E;;AAEA,2D;;;;;;;;;;;;;;;;;;;;ACjKA,kB;AACA,wD;;AAEA,yD;AACA,sC;AACA,gC;AACA,wC;AACA,mC;AACA,iB;AACA,4C;AACA,+D;AACA,qB;AACA,mE;AACA,0D;AACA,c;AACA,wE;AACA,O;AACA,M;;AAEA,4D;AACA,uC;AACA,+C;AACA,uE;AACA,6D;AACA,6D;;AAEA,2D;AACA,6D;AACA,wF;AACA,8D;AACA,0F;;AAEA,wC;AACA,G;AACA,G;;AAEA,2E;AACA,6E;AACA,E;;AAEA,gF;AACA,6B;AACA,yE;AACA,oB;AACA,4C;AACA,oB;AACA,M;AACA,iC;AACA,E;;AAEA,8E;AACA,+B;AACA,uC;AACA,oD;AACA,E;;;;;;;;;;;;;;;;;;;ACtDA,kB;AACA,wD;;AAEA,0D;AACA,+B;AACA,8B;AACA,oE;AACA,qD;AACA,iB;AACA,8B;AACA,I;AACA,0C;AACA,wC;AACA,G;AACA,G;;;AAGA,E;AACA,oD;AACA,E;;AAEA,+C;AACA,2D;AACA,wC;AACA,0D;AACA,G;AACA,G;;AAEA,iE;;AAEA,2E;AACA,yD;AACA,E;;AAEA,wE;AACA,sD;AACA,E;;AAEA,sE;AACA,oD;AACA,E;;AAEA,mF;AACA,2E;AACA,4E;AACA,kF;AACA,I;AACA,2E;AACA,2B;AACA,oF;AACA,E;;;AAGA,E;AACA,qD;AACA,E;;AAEA,gD;AACA,gD;AACA,oB;AACA,I;;AAEA,uD;AACA,6B;AACA,uB;AACA,I;;AAEA,uD;AACA,qB;AACA,I;;AAEA,qC;AACA,wC;;AAEA,iE;AACA,6D;AACA,uD;AACA,6E;AACA,0E;AACA,sD;;AAEA,kD;AACA,2D;AACA,8E;AACA,iB;;AAEA,kD;AACA,0B;AACA,iE;AACA,4B;AACA,2D;AACA,sC;AACA,8C;AACA,0E;AACA,Q;AACA,qE;;AAEA,0B;AACA,iE;;AAEA,mE;AACA,mE;AACA,4D;AACA,oC;AACA,M;AACA,4C;AACA,qI;AACA,gE;AACA,kC;AACA,wG;AACA,mC;AACA,I;AACA,8C;AACA,wC;;AAEA,iE;AACA,uD;AACA,6E;;AAEA,mD;AACA,0D;AACA,8E;AACA,iB;;AAEA,kD;AACA,uB;AACA,qE;AACA,sC;AACA,8C;AACA,iF;;AAEA,I;AACA,4C;AACA,wC;;AAEA,6D;AACA,sD;AACA,6F;AACA,0E;AACA,sD;;AAEA,mD;AACA,2D;AACA,8E;AACA,iB;;AAEA,kD;AACA,iE;AACA,+C;AACA,2D;;AAEA,2D;AACA,mF;;AAEA,0B;AACA,iE;AACA,I;AACA,oK;AACA,6B;AACA,sB;AACA,G;AACA,G;;AAEA,iE;AACA,yE;AACA,8B;AACA,iB;AACA,U;AACA,kD;AACA,yC;AACA,iE;AACA,0C;AACA,Y;AACA,kC;AACA,K;AACA,G;AACA,E;;AAEA,uE;AACA,oD;AACA,E;;AAEA,gF;;AAEA,gD;AACA,uE;;AAEA,4E;AACA,kC;AACA,E;;AAEA,2E;AACA,uC;AACA,E;;AAEA,+D;AACA,qB;;AAEA,qE;AACA,qB;AACA,qE;AACA,2B;AACA,yB;AACA,+D;AACA,iC;AACA,Q;AACA,mD;AACA,2B;AACA,yD;AACA,Q;AACA,iE;AACA,2B;AACA,sD;AACA,Q;AACA,0E;AACA,2B;AACA,mB;AACA,O;AACA,I;;AAEA,sB;AACA,mD;AACA,2B;AACA,yB;AACA,gF;AACA,iC;AACA,Q;AACA,iE;AACA,2B;AACA,yB;AACA,8C;AACA,iC;AACA,Q;AACA,4E;AACA,2B;AACA,uE;AACA,Q;AACA,0E;AACA,2B;AACA,mB;AACA,Q;AACA,iE;AACA,2B;AACA,2B;AACA,8D;AACA,mE;AACA,qC;AACA,yB;AACA,0D;AACA,iC;AACA,O;AACA,I;;AAEA,8E;AACA,E;;AAEA,mF;AACA,yD;AACA,E;;AAEA,0E;AACA,sG;AACA,E;;AAEA,2E;AACA,iD;AACA,E;;AAEA,oF;AACA,wD;AACA,E;;AAEA,qF;AACA,oB;AACA,wE;AACA,4B;AACA,E;;AAEA,yD;AACA,kC;AACA,E;;;AAGA,E;AACA,sC;AACA,E;;AAEA,6C;AACA,8G;AACA,6B;AACA,uB;AACA,I;AACA,0D;AACA,qB;AACA,G;AACA,G;;AAEA,2D;AACA,U;AACA,sF;AACA,2B;AACA,mB;AACA,Q;AACA,8E;AACA,2B;AACA,mB;AACA,Q;AACA,qE;AACA,2B;AACA,2B;AACA,8D;AACA,mE;AACA,qC;AACA,yB;AACA,0D;AACA,iC;AACA,O;AACA,I;AACA,E;;;AAGA,E;AACA,U;AACA,E;;AAEA,qC;AACA,4C;AACA,e;AACA,gB;AACA,M;AACA,yB;AACA,E;;AAEA,4C;AACA,4C;AACA,e;AACA,gB;AACA,M;AACA,kF;AACA,E;;AAEA,iC;AACA,8C;AACA,a;AACA,M;AACA,Y;AACA,E;;AAEA,yB;AACA,sC;;AAEA,2D;AACA,qD;AACA,2E;AACA,wE;AACA,oD;;AAEA,oB;AACA,0B;AACA,oC;AACA,a;AACA,Q;AACA,2C;AACA,8B;AACA,8B;AACA,a;AACA,Q;AACA,qC;AACA,wC;AACA,sF;AACA,6D;AACA,2C;AACA,a;AACA,Q;AACA,sC;AACA,U;AACA,gF;AACA,G;;AAEA,8E;AACA,gB;AACA,wE;AACA,Y;AACA,0C;AACA,K;AACA,K;AACA,E;;AAEA,0B;AACA,sC;;AAEA,0D;;AAEA,2D;AACA,0B;AACA,oC;AACA,a;AACA,Q;AACA,kC;AACA,G;;AAEA,qD;AACA,uB;AACA,8B;AACA,a;AACA,Q;AACA,4B;AACA,G;;AAEA,wE;AACA,oD;AACA,kC;AACA,W;AACA,M;AACA,gC;;AAEA,qC;AACA,W;;AAEA,iD;AACA,gB;AACA,wE;AACA,Y;AACA,0C;AACA,K;AACA,K;AACA,E;;AAEA,kC;AACA,sC;;AAEA,+D;AACA,kC;AACA,8D;AACA,gB;AACA,0E;AACA,U;AACA,sD;AACA,O;AACA,U;AACA,sD;AACA,G;AACA,E;;AAEA,kC;AACA,sC;;AAEA,wE;AACA,2D;;AAEA,wE;AACA,oD;AACA,kC;AACA,W;;AAEA,qC;AACA,W;;AAEA,mE;AACA,gB;AACA,wE;AACA,Y;AACA,6D;AACA,yD;AACA,0D;AACA,K;AACA,K;AACA,E;;AAEA,+C;AACA,wE;AACA,+D;AACA,+B;AACA,0E;AACA,sD;AACA,qC;AACA,gE;AACA,mB;AACA,K;AACA,G;AACA,c;AACA,E;;AAEA,2C;AACA,gE;AACA,gE;AACA,gE;AACA,8D;AACA,+D;AACA,8C;AACA,I;AACA,wD;AACA,sC;AACA,wE;AACA,4B;AACA,uB;AACA,6B;AACA,yB;AACA,E;;;;;;;;;;;;;;;;;;;AClfA,kB;AACA,wD;;;AAGA,E;AACA,2D;AACA,oE;AACA,mE;AACA,8C;AACA,E;;AAEA,mC;AACA,8E;AACA,C;;AAEA,mC;AACA,8E;AACA,C;;AAEA,mE;AACA,mE;AACA,iE;AACA,4B;AACA,mC;AACA,sE;AACA,kC;AACA,iB;AACA,2D;AACA,kD;AACA,O;AACA,G;AACA,G;;;AAGA,E;AACA,+B;AACA,E;;AAEA,sC;AACA,6D;AACA,oB;AACA,I;AACA,6D;AACA,6B;AACA,sB;AACA,I;AACA,6D;AACA,wD;AACA,gC;AACA,G;AACA,G;;AAEA,iC;AACA,sC;AACA,iF;AACA,qC;AACA,W;;AAEA,yB;AACA,+D;AACA,sB;AACA,kB;AACA,0E;AACA,c;AACA,4D;AACA,oC;AACA,O;AACA,O;AACA,E;;AAEA,iE;AACA,uD;AACA,E;;;AAGA,E;AACA,+B;AACA,E;;AAEA,sC;AACA,6D;AACA,oB;AACA,I;AACA,yD;AACA,6B;AACA,sB;AACA,I;AACA,6D;AACA,wD;AACA,gC;AACA,G;AACA,G;;AAEA,iC;AACA,sC;AACA,0E;AACA,kC;AACA,W;;AAEA,yB;AACA,4D;AACA,sB;AACA,kB;AACA,0E;AACA,c;AACA,4D;AACA,oC;AACA,O;AACA,O;AACA,E;;AAEA,iE;AACA,uD;AACA,E;;;AAGA,E;AACA,mC;AACA,E;;AAEA,0C;AACA,sD;AACA,wD;AACA,G;AACA,G;;AAEA,yD;AACA,sD;AACA,E;;;AAGA,E;AACA,sC;AACA,E;;AAEA,6C;AACA,wD;AACA,wC;AACA,G;AACA,G;;AAEA,4D;AACA,qG;AACA,mC;AACA,E;;;AAGA,E;AACA,uC;AACA,E;;AAEA,8C;AACA,gE;AACA,yE;AACA,I;AACA,2E;AACA,wE;AACA,+E;AACA,kE;AACA,0F;AACA,2B;AACA,4B;AACA,Q;;AAEA,4C;AACA,qD;AACA,gE;AACA,mE;AACA,mE;AACA,S;;AAEA,qC;AACA,+B;AACA,0E;AACA,oB;AACA,2E;AACA,iC;AACA,c;AACA,yE;AACA,2C;AACA,W;AACA,K;AACA,I;AACA,6E;AACA,6E;AACA,wE;AACA,0C;AACA,mE;AACA,qE;AACA,wE;AACA,2B;AACA,G;AACA,G;;AAEA,mE;AACA,6D;AACA,4D;AACA,sC;AACA,oE;AACA,mC;AACA,uE;AACA,K;;AAEA,oF;AACA,E;;AAEA,iE;AACA,sD;AACA,iE;AACA,sF;AACA,wE;AACA,mB;AACA,oD;AACA,uD;AACA,sC;AACA,6C;AACA,E;;AAEA,uC;AACA,iE;AACA,2B;AACA,E;;AAEA,yE;AACA,+B;AACA,E;;AAEA,6D;AACA,uE;AACA,E;;AAEA,wE;AACA,qC;AACA,yD;AACA,E;;AAEA,kE;AACA,4E;AACA,E;;AAEA,8E;AACA,+B;AACA,uC;AACA,oD;AACA,E","sourcesContent":["Accounts.ui = {};\n\nAccounts.ui._options = {\n  requestPermissions: {},\n  requestOfflineToken: {}\n};\n\nAccounts.ui.config = function(options) {\n  // validate options keys\n  var VALID_KEYS = ['passwordSignupFields', 'requestPermissions', 'requestOfflineToken'];\n  _.each(_.keys(options), function (key) {\n    if (!_.contains(VALID_KEYS, key))\n      throw new Error(\"Accounts.ui.config: Invalid key: \" + key);\n  });\n\n  // deal with `passwordSignupFields`\n  if (options.passwordSignupFields) {\n    if (_.contains([\n      \"USERNAME_AND_EMAIL\",\n      \"USERNAME_AND_OPTIONAL_EMAIL\",\n      \"USERNAME_ONLY\",\n      \"EMAIL_ONLY\"\n    ], options.passwordSignupFields)) {\n      if (Accounts.ui._options.passwordSignupFields)\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n      else\n        Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;\n    } else {\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n    }\n  }\n\n  // deal with `requestPermissions`\n  if (options.requestPermissions) {\n    _.each(options.requestPermissions, function (scope, service) {\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);\n      } else if (!(scope instanceof Array)) {\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n      } else {\n        Accounts.ui._options.requestPermissions[service] = scope;\n      }\n    });\n  }\n\n  // deal with `requestOfflineToken`\n  if (options.requestOfflineToken) {\n    _.each(options.requestOfflineToken, function (value, service) {\n      if (service !== 'google')\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);\n      } else {\n        Accounts.ui._options.requestOfflineToken[service] = value;\n      }\n    });\n  }\n};\n\npasswordSignupFields = function () {\n  return Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";\n};\n\n","\nTemplate.__define__(\"loginButtons\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    id: \"login-buttons\",\n    \"class\": [ \"login-buttons-dropdown-align-\", function() {\n      return Spacebars.mustache(self.lookup(\"align\"));\n    } ]\n  }, \"\\n    \", UI.If(function() {\n    return Spacebars.call(self.lookup(\"currentUser\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n      \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"loggingIn\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n        \\n        \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"dropdown\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n          \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n        \" ];\n      }), UI.block(function() {\n        var self = this;\n        return [ \"\\n          \", HTML.DIV({\n          \"class\": \"login-buttons-with-only-one-button\"\n        }, \"\\n            \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingInSingleLoginButton\")), \"\\n          \"), \"\\n        \" ];\n      })), \"\\n      \" ];\n    }), UI.block(function() {\n      var self = this;\n      return [ \"\\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedIn\")), \"\\n      \" ];\n    })), \"\\n    \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOut\")), \"\\n    \" ];\n  })), \"\\n  \");\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedIn\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"dropdown\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedInDropdown\")), \"\\n  \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"login-buttons-with-only-one-button\"\n    }, \"\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedInSingleLogoutButton\")), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedOut\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"services\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \" \\n    \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"configurationLoaded\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n      \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"dropdown\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \" \\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOutDropdown\")), \"\\n      \" ];\n      }), UI.block(function() {\n        var self = this;\n        return [ \"\\n        \", Spacebars.With(function() {\n          return Spacebars.call(self.lookup(\"singleService\"));\n        }, UI.block(function() {\n          var self = this;\n          return [ \" \\n          \", HTML.DIV({\n            \"class\": \"login-buttons-with-only-one-button\"\n          }, \"\\n            \", UI.If(function() {\n            return Spacebars.call(self.lookup(\"loggingIn\"));\n          }, UI.block(function() {\n            var self = this;\n            return [ \"\\n              \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingInSingleLoginButton\")), \"\\n            \" ];\n          }), UI.block(function() {\n            var self = this;\n            return [ \"\\n              \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n            \" ];\n          })), \"\\n          \"), \"\\n        \" ];\n        })), \"\\n      \" ];\n      })), \"\\n    \" ];\n    })), \"\\n  \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"no-services\"\n    }, \"No login services configured\"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_loginButtonsMessages\", (function() {\n  var self = this;\n  var template = this;\n  return [ UI.If(function() {\n    return Spacebars.call(self.lookup(\"errorMessage\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"message error-message\"\n    }, function() {\n      return Spacebars.mustache(self.lookup(\"errorMessage\"));\n    }), \"\\n  \" ];\n  })), \"\\n  \", UI.If(function() {\n    return Spacebars.call(self.lookup(\"infoMessage\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"message info-message\"\n    }, function() {\n      return Spacebars.mustache(self.lookup(\"infoMessage\"));\n    }), \"\\n  \" ];\n  })) ];\n}));\n\nTemplate.__define__(\"_loginButtonsLoggingIn\", (function() {\n  var self = this;\n  var template = this;\n  return [ Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingInPadding\")), HTML.Raw('\\n  <div class=\"loading\">&nbsp;</div>\\n  '), Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingInPadding\")) ];\n}));\n\nTemplate.__define__(\"_loginButtonsLoggingInPadding\", (function() {\n  var self = this;\n  var template = this;\n  return UI.Unless(function() {\n    return Spacebars.call(self.lookup(\"dropdown\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \\n    \", HTML.DIV({\n      \"class\": \"login-buttons-padding\"\n    }, \"\\n      \", HTML.DIV({\n      \"class\": \"login-button single-login-button\",\n      style: \"visibility: hidden;\",\n      id: \"login-buttons-logout\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n    \"), \"\\n  \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n    \\n    \", HTML.DIV({\n      \"class\": \"login-buttons-padding\"\n    }), \"\\n  \" ];\n  }));\n}));\n","\nTemplate.__define__(\"_loginButtonsLoggedOutSingleLoginButton\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    \"class\": \"login-text-and-button\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": [ \"login-button single-login-button \", UI.Unless(function() {\n      return Spacebars.call(self.lookup(\"configured\"));\n    }, UI.block(function() {\n      var self = this;\n      return \"configure-button\";\n    })) ],\n    id: [ \"login-buttons-\", function() {\n      return Spacebars.mustache(self.lookup(\"name\"));\n    } ]\n  }, \"\\n      \", HTML.DIV({\n    \"class\": \"login-image\",\n    id: [ \"login-buttons-image-\", function() {\n      return Spacebars.mustache(self.lookup(\"name\"));\n    } ]\n  }), \"\\n      \", UI.If(function() {\n    return Spacebars.call(self.lookup(\"configured\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n        \", HTML.SPAN({\n      \"class\": [ \"text-besides-image sign-in-text-\", function() {\n        return Spacebars.mustache(self.lookup(\"name\"));\n      } ]\n    }, \"Sign in with \", function() {\n      return Spacebars.mustache(self.lookup(\"capitalizedName\"));\n    }), \"\\n      \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n        \", HTML.SPAN({\n      \"class\": [ \"text-besides-image configure-text-\", function() {\n        return Spacebars.mustache(self.lookup(\"name\"));\n      } ]\n    }, \"Configure \", function() {\n      return Spacebars.mustache(self.lookup(\"capitalizedName\"));\n    }, \" Login\"), \"\\n      \" ];\n  })), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__define__(\"_loginButtonsLoggingInSingleLoginButton\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    \"class\": \"login-text-and-button\"\n  }, \"\\n    \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n  \");\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedInSingleLogoutButton\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    \"class\": \"login-text-and-button\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"login-display-name\"\n  }, \"\\n      \", function() {\n    return Spacebars.mustache(self.lookup(\"displayName\"));\n  }, \"\\n    \"), HTML.Raw('\\n    <div class=\"login-button single-login-button\" id=\"login-buttons-logout\">Sign Out</div>\\n  '));\n}));\n","\nTemplate.__define__(\"_loginButtonsLoggedInDropdown\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    \"class\": \"login-link-and-dropdown-list\"\n  }, \"\\n    \", HTML.A({\n    \"class\": \"login-link-text\",\n    id: \"login-name-link\"\n  }, \"\\n      \", function() {\n    return Spacebars.mustache(self.lookup(\"displayName\"));\n  }, \" ▾\\n    \"), \"\\n\\n    \", UI.If(function() {\n    return Spacebars.call(self.lookup(\"dropdownVisible\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n      \", HTML.DIV({\n      id: \"login-dropdown-list\",\n      \"class\": \"accounts-dialog\"\n    }, \"\\n        \", HTML.A({\n      \"class\": \"login-close-text\"\n    }, \"Close\"), \"\\n        \", HTML.DIV({\n      \"class\": \"login-close-text-clear\"\n    }), \"\\n\\n        \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"inMessageOnlyFlow\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n          \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), \"\\n        \" ];\n    }), UI.block(function() {\n      var self = this;\n      return [ \"\\n          \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"inChangePasswordFlow\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n            \", Spacebars.include(self.lookupTemplate(\"_loginButtonsChangePassword\")), \"\\n          \" ];\n      }), UI.block(function() {\n        var self = this;\n        return [ \"\\n            \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedInDropdownActions\")), \"\\n          \" ];\n      })), \"\\n        \" ];\n    })), \"\\n      \"), \"\\n    \" ];\n  })), \"\\n  \");\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedInDropdownActions\", (function() {\n  var self = this;\n  var template = this;\n  return [ UI.If(function() {\n    return Spacebars.call(self.lookup(\"allowChangingPassword\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"login-button\",\n      id: \"login-buttons-open-change-password\"\n    }, \"\\n      Change password\\n    \"), \"\\n  \" ];\n  })), HTML.Raw('\\n\\n  <div class=\"login-button\" id=\"login-buttons-logout\">\\n    Sign out\\n  </div>\\n\\n  '), Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")) ];\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedOutDropdown\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    \"class\": [ \"login-link-and-dropdown-list \", function() {\n      return Spacebars.mustache(self.lookup(\"additionalClasses\"));\n    } ]\n  }, \"\\n    \", UI.If(function() {\n    return Spacebars.call(self.lookup(\"dropdownVisible\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n      \\n      \", HTML.A({\n      \"class\": \"login-link-text\",\n      id: \"login-sign-in-link\"\n    }, \"Sign in ▾\"), \"\\n      \", HTML.DIV({\n      id: \"login-dropdown-list\",\n      \"class\": \"accounts-dialog\"\n    }, \"\\n        \", HTML.A({\n      \"class\": \"login-close-text\"\n    }, \"Close\"), \"\\n        \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"loggingIn\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n          \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n        \" ];\n    })), \"\\n        \", HTML.DIV({\n      \"class\": \"login-close-text-clear\"\n    }), \"\\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOutAllServices\")), \"\\n      \"), \"\\n    \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n      \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"loggingIn\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n        \\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n      \" ];\n    }), UI.block(function() {\n      var self = this;\n      return [ \"\\n        \", HTML.A({\n        \"class\": \"login-link-text\",\n        id: \"login-sign-in-link\"\n      }, \"Sign in ▾\"), \"\\n      \" ];\n    })), \"\\n    \" ];\n  })), \"\\n  \");\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedOutAllServices\", (function() {\n  var self = this;\n  var template = this;\n  return [ UI.Each(function() {\n    return Spacebars.call(self.lookup(\"services\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"isPasswordService\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n      \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"hasOtherServices\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \" \\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOutPasswordServiceSeparator\")), \"\\n      \" ];\n      })), \"\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOutPasswordService\")), \"\\n    \" ];\n    }), UI.block(function() {\n      var self = this;\n      return [ \"\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n    \" ];\n    })), \"\\n  \" ];\n  })), \"\\n\\n  \", UI.Unless(function() {\n    return Spacebars.call(self.lookup(\"hasPasswordService\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), \"\\n  \" ];\n  })) ];\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedOutPasswordServiceSeparator\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.Raw('<div class=\"or\">\\n    <span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n    <span class=\"or-text\">or</span>\\n    <span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n  </div>');\n}));\n\nTemplate.__define__(\"_loginButtonsLoggedOutPasswordService\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"inForgotPasswordFlow\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", Spacebars.include(self.lookupTemplate(\"_forgotPasswordForm\")), \"\\n  \" ];\n  }), UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"login-form login-password-form\"\n    }, \"\\n      \", UI.Each(function() {\n      return Spacebars.call(self.lookup(\"fields\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsFormField\")), \"\\n      \" ];\n    })), \"\\n\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"login-button login-button-form-submit\",\n      id: \"login-buttons-password\"\n    }, \"\\n        \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"inSignupFlow\"));\n    }, UI.block(function() {\n      var self = this;\n      return \"\\n          Create account\\n        \";\n    }), UI.block(function() {\n      var self = this;\n      return \"\\n          Sign in\\n        \";\n    })), \"\\n      \"), \"\\n\\n      \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"inLoginFlow\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n        \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"showCreateAccountLink\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n          \", HTML.DIV({\n          \"class\": \"additional-link-container\"\n        }, \"\\n            \", HTML.A({\n          id: \"signup-link\",\n          \"class\": \"additional-link\"\n        }, \"Create account\"), \"\\n          \"), \"\\n        \" ];\n      })), \"\\n\\n        \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"showForgotPasswordLink\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n          \", HTML.DIV({\n          \"class\": \"additional-link-container\"\n        }, \"\\n            \", HTML.A({\n          id: \"forgot-password-link\",\n          \"class\": \"additional-link\"\n        }, \"Forgot password\"), \"\\n          \"), \"\\n        \" ];\n      })), \"\\n      \" ];\n    })), \"\\n\\n      \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"inSignupFlow\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n        \", Spacebars.include(self.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n      \" ];\n    })), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_forgotPasswordForm\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.DIV({\n    \"class\": \"login-form\"\n  }, HTML.Raw('\\n    <div id=\"forgot-password-email-label-and-input\"> \\n      <label id=\"forgot-password-email-label\" for=\"forgot-password-email\">Email</label>\\n      <input id=\"forgot-password-email\" type=\"email\">\\n    </div>\\n\\n    '), Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), HTML.Raw('\\n\\n    <div class=\"login-button login-button-form-submit\" id=\"login-buttons-forgot-password\">\\n      Reset password\\n    </div>\\n\\n    '), Spacebars.include(self.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n  \");\n}));\n\nTemplate.__define__(\"_loginButtonsBackToLoginLink\", (function() {\n  var self = this;\n  var template = this;\n  return HTML.Raw('<div class=\"additional-link-container\">\\n    <a id=\"back-to-login-link\" class=\"additional-link\">Sign in</a>\\n  </div>');\n}));\n\nTemplate.__define__(\"_loginButtonsFormField\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"visible\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      id: [ \"login-\", function() {\n        return Spacebars.mustache(self.lookup(\"fieldName\"));\n      }, \"-label-and-input\" ]\n    }, \"\\n      \", HTML.LABEL({\n      id: [ \"login-\", function() {\n        return Spacebars.mustache(self.lookup(\"fieldName\"));\n      }, \"-label\" ],\n      \"for\": [ \"login-\", function() {\n        return Spacebars.mustache(self.lookup(\"fieldName\"));\n      } ]\n    }, \"\\n        \", function() {\n      return Spacebars.mustache(self.lookup(\"fieldLabel\"));\n    }, \"\\n      \"), \"\\n      \", HTML.INPUT({\n      id: [ \"login-\", function() {\n        return Spacebars.mustache(self.lookup(\"fieldName\"));\n      } ],\n      type: function() {\n        return Spacebars.mustache(self.lookup(\"inputType\"));\n      }\n    }), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_loginButtonsChangePassword\", (function() {\n  var self = this;\n  var template = this;\n  return [ UI.Each(function() {\n    return Spacebars.call(self.lookup(\"fields\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", Spacebars.include(self.lookupTemplate(\"_loginButtonsFormField\")), \"\\n  \" ];\n  })), \"\\n\\n  \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), HTML.Raw('\\n\\n  <div class=\"login-button login-button-form-submit\" id=\"login-buttons-do-change-password\">\\n    Change password\\n  </div>') ];\n}));\n","\nUI.body.contentParts.push(UI.Component.extend({render: (function() {\n  var self = this;\n  return [ Spacebars.include(self.lookupTemplate(\"_resetPasswordDialog\")), \"\\n  \", Spacebars.include(self.lookupTemplate(\"_enrollAccountDialog\")), \"\\n  \", Spacebars.include(self.lookupTemplate(\"_justVerifiedEmailDialog\")), \"\\n  \", Spacebars.include(self.lookupTemplate(\"_configureLoginServiceDialog\")), HTML.Raw(\"\\n\\n  <!-- if we're not showing a dropdown, we need some other place to show messages -->\\n  \"), Spacebars.include(self.lookupTemplate(\"_loginButtonsMessagesDialog\")) ];\n})}));\nMeteor.startup(function () { if (! UI.body.INSTANTIATED) { UI.body.INSTANTIATED = true; UI.DomRange.insert(UI.render(UI.body).dom, document.body); } });\n\nTemplate.__define__(\"_resetPasswordDialog\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"inResetPasswordFlow\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"hide-background\"\n    }), \"\\n\\n    \", HTML.DIV({\n      \"class\": \"accounts-dialog accounts-centered-dialog\"\n    }, \"\\n      \", HTML.LABEL({\n      id: \"reset-password-new-password-label\",\n      \"for\": \"reset-password-new-password\"\n    }, \"\\n        New password\\n      \"), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"reset-password-new-password-wrapper\"\n    }, \"\\n        \", HTML.INPUT({\n      id: \"reset-password-new-password\",\n      type: \"password\"\n    }), \"\\n      \"), \"\\n\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"login-button login-button-form-submit\",\n      id: \"login-buttons-reset-password-button\"\n    }, \"\\n        Set password\\n      \"), \"\\n\\n      \", HTML.A({\n      \"class\": \"accounts-close\",\n      id: \"login-buttons-cancel-reset-password\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_enrollAccountDialog\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"inEnrollAccountFlow\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"hide-background\"\n    }), \"\\n\\n    \", HTML.DIV({\n      \"class\": \"accounts-dialog accounts-centered-dialog\"\n    }, \"\\n      \", HTML.LABEL({\n      id: \"enroll-account-password-label\",\n      \"for\": \"enroll-account-password\"\n    }, \"\\n        Choose a password\\n      \"), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"enroll-account-password-wrapper\"\n    }, \"\\n        \", HTML.INPUT({\n      id: \"enroll-account-password\",\n      type: \"password\"\n    }), \"\\n      \"), \"\\n\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"login-button login-button-form-submit\",\n      id: \"login-buttons-enroll-account-button\"\n    }, \"\\n        Create account\\n      \"), \"\\n\\n      \", HTML.A({\n      \"class\": \"accounts-close\",\n      id: \"login-buttons-cancel-enroll-account\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_justVerifiedEmailDialog\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"visible\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"accounts-dialog accounts-centered-dialog\"\n    }, \"\\n      Email verified\\n      \", HTML.DIV({\n      \"class\": \"login-button\",\n      id: \"just-verified-dismiss-button\"\n    }, \"Dismiss\"), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_configureLoginServiceDialog\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"visible\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      id: \"configure-login-service-dialog\",\n      \"class\": \"accounts-dialog accounts-centered-dialog\"\n    }, \"\\n      \", Spacebars.include(self.lookupTemplate(\"configurationSteps\")), \"\\n\\n      \", HTML.P(\"\\n        Now, copy over some details.\\n      \"), \"\\n      \", HTML.P(\"\\n        \", HTML.TABLE(\"\\n          \", HTML.COLGROUP(\"\\n            \", HTML.COL({\n      span: \"1\",\n      \"class\": \"configuration_labels\"\n    }), \"\\n            \", HTML.COL({\n      span: \"1\",\n      \"class\": \"configuration_inputs\"\n    }), \"\\n          \"), \"\\n          \", UI.Each(function() {\n      return Spacebars.call(self.lookup(\"configurationFields\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n            \", HTML.TR(\"\\n              \", HTML.TD(\"\\n                \", HTML.LABEL({\n        \"for\": [ \"configure-login-service-dialog-\", function() {\n          return Spacebars.mustache(self.lookup(\"property\"));\n        } ]\n      }, function() {\n        return Spacebars.mustache(self.lookup(\"label\"));\n      }), \"\\n              \"), \"\\n              \", HTML.TD(\"\\n                \", HTML.INPUT({\n        id: [ \"configure-login-service-dialog-\", function() {\n          return Spacebars.mustache(self.lookup(\"property\"));\n        } ],\n        type: \"text\"\n      }), \"\\n              \"), \"\\n            \"), \"\\n          \" ];\n    })), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.DIV({\n      \"class\": \"new-section\"\n    }, \"\\n        \", HTML.DIV({\n      \"class\": \"login-button configure-login-service-dismiss-button\"\n    }, \"\\n          I'll do this later\\n        \"), \"\\n        \", HTML.A({\n      \"class\": \"accounts-close configure-login-service-dismiss-button\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    })), \"\\n\\n        \", HTML.DIV({\n      \"class\": [ \"login-button login-button-configure \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"saveDisabled\"));\n      }, UI.block(function() {\n        var self = this;\n        return \"login-button-disabled\";\n      })) ],\n      id: \"configure-login-service-dialog-save-configuration\"\n    }, \"\\n          Save Configuration\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n\nTemplate.__define__(\"_loginButtonsMessagesDialog\", (function() {\n  var self = this;\n  var template = this;\n  return UI.If(function() {\n    return Spacebars.call(self.lookup(\"visible\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"accounts-dialog accounts-centered-dialog\",\n      id: \"login-buttons-message-dialog\"\n    }, \"\\n      \", Spacebars.include(self.lookupTemplate(\"_loginButtonsMessages\")), \"\\n      \", HTML.DIV({\n      \"class\": \"login-button\",\n      id: \"messages-dialog-dismiss-button\"\n    }, \"Dismiss\"), \"\\n    \"), \"\\n  \" ];\n  }));\n}));\n","var VALID_KEYS = [\n  'dropdownVisible',\n\n  // XXX consider replacing these with one key that has an enum for values.\n  'inSignupFlow',\n  'inForgotPasswordFlow',\n  'inChangePasswordFlow',\n  'inMessageOnlyFlow',\n\n  'errorMessage',\n  'infoMessage',\n\n  // dialogs with messages (info and error)\n  'resetPasswordToken',\n  'enrollAccountToken',\n  'justVerifiedEmail',\n\n  'configureLoginServiceDialogVisible',\n  'configureLoginServiceDialogServiceName',\n  'configureLoginServiceDialogSaveDisabled'\n];\n\nvar validateKey = function (key) {\n  if (!_.contains(VALID_KEYS, key))\n    throw new Error(\"Invalid key in loginButtonsSession: \" + key);\n};\n\nvar KEY_PREFIX = \"Meteor.loginButtons.\";\n\n// XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\nAccounts._loginButtonsSession = {\n  set: function(key, value) {\n    validateKey(key);\n    if (_.contains(['errorMessage', 'infoMessage'], key))\n      throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n    this._set(key, value);\n  },\n\n  _set: function(key, value) {\n    Session.set(KEY_PREFIX + key, value);\n  },\n\n  get: function(key) {\n    validateKey(key);\n    return Session.get(KEY_PREFIX + key);\n  },\n\n  closeDropdown: function () {\n    this.set('inSignupFlow', false);\n    this.set('inForgotPasswordFlow', false);\n    this.set('inChangePasswordFlow', false);\n    this.set('inMessageOnlyFlow', false);\n    this.set('dropdownVisible', false);\n    this.resetMessages();\n  },\n\n  infoMessage: function(message) {\n    this._set(\"errorMessage\", null);\n    this._set(\"infoMessage\", message);\n    this.ensureMessageVisible();\n  },\n\n  errorMessage: function(message) {\n    this._set(\"errorMessage\", message);\n    this._set(\"infoMessage\", null);\n    this.ensureMessageVisible();\n  },\n\n  // is there a visible dialog that shows messages (info and error)\n  isMessageDialogVisible: function () {\n    return this.get('resetPasswordToken') ||\n      this.get('enrollAccountToken') ||\n      this.get('justVerifiedEmail');\n  },\n\n  // ensure that somethings displaying a message (info or error) is\n  // visible.  if a dialog with messages is open, do nothing;\n  // otherwise open the dropdown.\n  //\n  // notably this doesn't matter when only displaying a single login\n  // button since then we have an explicit message dialog\n  // (_loginButtonsMessageDialog), and dropdownVisible is ignored in\n  // this case.\n  ensureMessageVisible: function () {\n    if (!this.isMessageDialogVisible())\n      this.set(\"dropdownVisible\", true);\n  },\n\n  resetMessages: function () {\n    this._set(\"errorMessage\", null);\n    this._set(\"infoMessage\", null);\n  },\n\n  configureService: function (name) {\n    this.set('configureLoginServiceDialogVisible', true);\n    this.set('configureLoginServiceDialogServiceName', name);\n    this.set('configureLoginServiceDialogSaveDisabled', true);\n  }\n};\n","// for convenience\nvar loginButtonsSession = Accounts._loginButtonsSession;\n\n// shared between dropdown and single mode\nTemplate.loginButtons.events({\n  'click #login-buttons-logout': function() {\n    Meteor.logout(function () {\n      loginButtonsSession.closeDropdown();\n    });\n  }\n});\n\nUI.registerHelper('loginButtons', function () {\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");\n});\n\n//\n// helpers\n//\n\ndisplayName = function () {\n  var user = Meteor.user();\n  if (!user)\n    return '';\n\n  if (user.profile && user.profile.name)\n    return user.profile.name;\n  if (user.username)\n    return user.username;\n  if (user.emails && user.emails[0] && user.emails[0].address)\n    return user.emails[0].address;\n\n  return '';\n};\n\n// returns an array of the login services used by this app. each\n// element of the array is an object (eg {name: 'facebook'}), since\n// that makes it useful in combination with handlebars {{#each}}.\n//\n// don't cache the output of this function: if called during startup (before\n// oauth packages load) it might not include them all.\n//\n// NOTE: It is very important to have this return password last\n// because of the way we render the different providers in\n// login_buttons_dropdown.html\ngetLoginServices = function () {\n  var self = this;\n\n  // First look for OAuth services.\n  var services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility. (But maybe order should be\n  // configurable?)\n  services.sort();\n\n  // Add password, if it's there; it must come last.\n  if (hasPasswordService())\n    services.push('password');\n\n  return _.map(services, function(name) {\n    return {name: name};\n  });\n};\n\nhasPasswordService = function () {\n  return !!Package['accounts-password'];\n};\n\ndropdown = function () {\n  return hasPasswordService() || getLoginServices().length > 1;\n};\n\n// XXX improve these. should this be in accounts-password instead?\n//\n// XXX these will become configurable, and will be validated on\n// the server as well.\nvalidateUsername = function (username) {\n  if (username.length >= 3) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\n    return false;\n  }\n};\nvalidateEmail = function (email) {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')\n    return true;\n\n  if (email.indexOf('@') !== -1) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n    return false;\n  }\n};\nvalidatePassword = function (password) {\n  if (password.length >= 6) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\n    return false;\n  }\n};\n\n//\n// loginButtonLoggedOut template\n//\n\nTemplate._loginButtonsLoggedOut.dropdown = dropdown;\n\nTemplate._loginButtonsLoggedOut.services = getLoginServices;\n\nTemplate._loginButtonsLoggedOut.singleService = function () {\n  var services = getLoginServices();\n  if (services.length !== 1)\n    throw new Error(\n      \"Shouldn't be rendering this template with more than one configured service\");\n  return services[0];\n};\n\nTemplate._loginButtonsLoggedOut.configurationLoaded = function () {\n  return Accounts.loginServicesConfigured();\n};\n\n\n//\n// loginButtonsLoggedIn template\n//\n\n// decide whether we should show a dropdown rather than a row of\n// buttons\nTemplate._loginButtonsLoggedIn.dropdown = dropdown;\n\n\n\n//\n// loginButtonsLoggedInSingleLogoutButton template\n//\n\nTemplate._loginButtonsLoggedInSingleLogoutButton.displayName = displayName;\n\n\n\n//\n// loginButtonsMessage template\n//\n\nTemplate._loginButtonsMessages.errorMessage = function () {\n  return loginButtonsSession.get('errorMessage');\n};\n\nTemplate._loginButtonsMessages.infoMessage = function () {\n  return loginButtonsSession.get('infoMessage');\n};\n\n\n//\n// loginButtonsLoggingInPadding template\n//\n\nTemplate._loginButtonsLoggingInPadding.dropdown = dropdown;\n\n","// for convenience\nvar loginButtonsSession = Accounts._loginButtonsSession;\n\nTemplate._loginButtonsLoggedOutSingleLoginButton.events({\n  'click .login-button': function () {\n    var serviceName = this.name;\n    loginButtonsSession.resetMessages();\n    var callback = function (err) {\n      if (!err) {\n        loginButtonsSession.closeDropdown();\n      } else if (err instanceof Accounts.LoginCancelledError) {\n        // do nothing\n      } else if (err instanceof ServiceConfiguration.ConfigError) {\n        loginButtonsSession.configureService(serviceName);\n      } else {\n        loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n      }\n    };\n\n    // XXX Service providers should be able to specify their\n    // `Meteor.loginWithX` method name.\n    var loginWithService = Meteor[\"loginWith\" +\n                                  (serviceName === 'meteor-developer' ?\n                                   'MeteorDeveloperAccount' :\n                                   capitalize(serviceName))];\n\n    var options = {}; // use default scope unless specified\n    if (Accounts.ui._options.requestPermissions[serviceName])\n      options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\n      options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\n\n    loginWithService(options, callback);\n  }\n});\n\nTemplate._loginButtonsLoggedOutSingleLoginButton.configured = function () {\n  return !!ServiceConfiguration.configurations.findOne({service: this.name});\n};\n\nTemplate._loginButtonsLoggedOutSingleLoginButton.capitalizedName = function () {\n  if (this.name === 'github')\n    // XXX we should allow service packages to set their capitalized name\n    return 'GitHub';\n  else if (this.name === 'meteor-developer')\n    return 'Meteor';\n  else\n    return capitalize(this.name);\n};\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nvar capitalize = function(str){\n  str = str == null ? '' : String(str);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","// for convenience\nvar loginButtonsSession = Accounts._loginButtonsSession;\n\n// events shared between loginButtonsLoggedOutDropdown and\n// loginButtonsLoggedInDropdown\nTemplate.loginButtons.events({\n  'click #login-name-link, click #login-sign-in-link': function () {\n    loginButtonsSession.set('dropdownVisible', true);\n    Deps.flush();\n    correctDropdownZIndexes();\n  },\n  'click .login-close-text': function () {\n    loginButtonsSession.closeDropdown();\n  }\n});\n\n\n//\n// loginButtonsLoggedInDropdown template and related\n//\n\nTemplate._loginButtonsLoggedInDropdown.events({\n  'click #login-buttons-open-change-password': function() {\n    loginButtonsSession.resetMessages();\n    loginButtonsSession.set('inChangePasswordFlow', true);\n  }\n});\n\nTemplate._loginButtonsLoggedInDropdown.displayName = displayName;\n\nTemplate._loginButtonsLoggedInDropdown.inChangePasswordFlow = function () {\n  return loginButtonsSession.get('inChangePasswordFlow');\n};\n\nTemplate._loginButtonsLoggedInDropdown.inMessageOnlyFlow = function () {\n  return loginButtonsSession.get('inMessageOnlyFlow');\n};\n\nTemplate._loginButtonsLoggedInDropdown.dropdownVisible = function () {\n  return loginButtonsSession.get('dropdownVisible');\n};\n\nTemplate._loginButtonsLoggedInDropdownActions.allowChangingPassword = function () {\n  // it would be more correct to check whether the user has a password set,\n  // but in order to do that we'd have to send more data down to the client,\n  // and it'd be preferable not to send down the entire service.password document.\n  //\n  // instead we use the heuristic: if the user has a username or email set.\n  var user = Meteor.user();\n  return user.username || (user.emails && user.emails[0] && user.emails[0].address);\n};\n\n\n//\n// loginButtonsLoggedOutDropdown template and related\n//\n\nTemplate._loginButtonsLoggedOutDropdown.events({\n  'click #login-buttons-password': function () {\n    loginOrSignup();\n  },\n\n  'keypress #forgot-password-email': function (event) {\n    if (event.keyCode === 13)\n      forgotPassword();\n  },\n\n  'click #login-buttons-forgot-password': function () {\n    forgotPassword();\n  },\n\n  'click #signup-link': function () {\n    loginButtonsSession.resetMessages();\n\n    // store values of fields before swtiching to the signup form\n    var username = trimmedElementValueById('login-username');\n    var email = trimmedElementValueById('login-email');\n    var usernameOrEmail = trimmedElementValueById('login-username-or-email');\n    // notably not trimmed. a password could (?) start or end with a space\n    var password = elementValueById('login-password');\n\n    loginButtonsSession.set('inSignupFlow', true);\n    loginButtonsSession.set('inForgotPasswordFlow', false);\n    // force the ui to update so that we have the approprate fields to fill in\n    Deps.flush();\n\n    // update new fields with appropriate defaults\n    if (username !== null)\n      document.getElementById('login-username').value = username;\n    else if (email !== null)\n      document.getElementById('login-email').value = email;\n    else if (usernameOrEmail !== null)\n      if (usernameOrEmail.indexOf('@') === -1)\n        document.getElementById('login-username').value = usernameOrEmail;\n    else\n      document.getElementById('login-email').value = usernameOrEmail;\n\n    if (password !== null)\n      document.getElementById('login-password').value = password;\n\n    // Force redrawing the `login-dropdown-list` element because of\n    // a bizarre Chrome bug in which part of the DIV is not redrawn\n    // in case you had tried to unsuccessfully log in before\n    // switching to the signup form.\n    //\n    // Found tip on how to force a redraw on\n    // http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes/3485654#3485654\n    var redraw = document.getElementById('login-dropdown-list');\n    redraw.style.display = 'none';\n    redraw.offsetHeight; // it seems that this line does nothing but is necessary for the redraw to work\n    redraw.style.display = 'block';\n  },\n  'click #forgot-password-link': function () {\n    loginButtonsSession.resetMessages();\n\n    // store values of fields before swtiching to the signup form\n    var email = trimmedElementValueById('login-email');\n    var usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\n    loginButtonsSession.set('inSignupFlow', false);\n    loginButtonsSession.set('inForgotPasswordFlow', true);\n    // force the ui to update so that we have the approprate fields to fill in\n    Deps.flush();\n\n    // update new fields with appropriate defaults\n    if (email !== null)\n      document.getElementById('forgot-password-email').value = email;\n    else if (usernameOrEmail !== null)\n      if (usernameOrEmail.indexOf('@') !== -1)\n        document.getElementById('forgot-password-email').value = usernameOrEmail;\n\n  },\n  'click #back-to-login-link': function () {\n    loginButtonsSession.resetMessages();\n\n    var username = trimmedElementValueById('login-username');\n    var email = trimmedElementValueById('login-email')\n          || trimmedElementValueById('forgot-password-email'); // Ughh. Standardize on names?\n    // notably not trimmed. a password could (?) start or end with a space\n    var password = elementValueById('login-password');\n\n    loginButtonsSession.set('inSignupFlow', false);\n    loginButtonsSession.set('inForgotPasswordFlow', false);\n    // force the ui to update so that we have the approprate fields to fill in\n    Deps.flush();\n\n    if (document.getElementById('login-username'))\n      document.getElementById('login-username').value = username;\n    if (document.getElementById('login-email'))\n      document.getElementById('login-email').value = email;\n\n    if (document.getElementById('login-username-or-email'))\n      document.getElementById('login-username-or-email').value = email || username;\n\n    if (password !== null)\n      document.getElementById('login-password').value = password;\n  },\n  'keypress #login-username, keypress #login-email, keypress #login-username-or-email, keypress #login-password, keypress #login-password-again': function (event) {\n    if (event.keyCode === 13)\n      loginOrSignup();\n  }\n});\n\n// additional classes that can be helpful in styling the dropdown\nTemplate._loginButtonsLoggedOutDropdown.additionalClasses = function () {\n  if (!hasPasswordService()) {\n    return false;\n  } else {\n    if (loginButtonsSession.get('inSignupFlow')) {\n      return 'login-form-create-account';\n    } else if (loginButtonsSession.get('inForgotPasswordFlow')) {\n      return 'login-form-forgot-password';\n    } else {\n      return 'login-form-sign-in';\n    }\n  }\n};\n\nTemplate._loginButtonsLoggedOutDropdown.dropdownVisible = function () {\n  return loginButtonsSession.get('dropdownVisible');\n};\n\nTemplate._loginButtonsLoggedOutDropdown.hasPasswordService = hasPasswordService;\n\n// return all login services, with password last\nTemplate._loginButtonsLoggedOutAllServices.services = getLoginServices;\n\nTemplate._loginButtonsLoggedOutAllServices.isPasswordService = function () {\n  return this.name === 'password';\n};\n\nTemplate._loginButtonsLoggedOutAllServices.hasOtherServices = function () {\n  return getLoginServices().length > 1;\n};\n\nTemplate._loginButtonsLoggedOutAllServices.hasPasswordService =\n  hasPasswordService;\n\nTemplate._loginButtonsLoggedOutPasswordService.fields = function () {\n  var loginFields = [\n    {fieldName: 'username-or-email', fieldLabel: 'Username or Email',\n     visible: function () {\n       return _.contains(\n         [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\"],\n         passwordSignupFields());\n     }},\n    {fieldName: 'username', fieldLabel: 'Username',\n     visible: function () {\n       return passwordSignupFields() === \"USERNAME_ONLY\";\n     }},\n    {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\n     visible: function () {\n       return passwordSignupFields() === \"EMAIL_ONLY\";\n     }},\n    {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',\n     visible: function () {\n       return true;\n     }}\n  ];\n\n  var signupFields = [\n    {fieldName: 'username', fieldLabel: 'Username',\n     visible: function () {\n       return _.contains(\n         [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n         passwordSignupFields());\n     }},\n    {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\n     visible: function () {\n       return _.contains(\n         [\"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"],\n         passwordSignupFields());\n     }},\n    {fieldName: 'email', fieldLabel: 'Email (optional)', inputType: 'email',\n     visible: function () {\n       return passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\";\n     }},\n    {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',\n     visible: function () {\n       return true;\n     }},\n    {fieldName: 'password-again', fieldLabel: 'Password (again)',\n     inputType: 'password',\n     visible: function () {\n       // No need to make users double-enter their password if\n       // they'll necessarily have an email set, since they can use\n       // the \"forgot password\" flow.\n       return _.contains(\n         [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n         passwordSignupFields());\n     }}\n  ];\n\n  return loginButtonsSession.get('inSignupFlow') ? signupFields : loginFields;\n};\n\nTemplate._loginButtonsLoggedOutPasswordService.inForgotPasswordFlow = function () {\n  return loginButtonsSession.get('inForgotPasswordFlow');\n};\n\nTemplate._loginButtonsLoggedOutPasswordService.inLoginFlow = function () {\n  return !loginButtonsSession.get('inSignupFlow') && !loginButtonsSession.get('inForgotPasswordFlow');\n};\n\nTemplate._loginButtonsLoggedOutPasswordService.inSignupFlow = function () {\n  return loginButtonsSession.get('inSignupFlow');\n};\n\nTemplate._loginButtonsLoggedOutPasswordService.showCreateAccountLink = function () {\n  return !Accounts._options.forbidClientAccountCreation;\n};\n\nTemplate._loginButtonsLoggedOutPasswordService.showForgotPasswordLink = function () {\n  return _.contains(\n    [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"],\n    passwordSignupFields());\n};\n\nTemplate._loginButtonsFormField.inputType = function () {\n  return this.inputType || \"text\";\n};\n\n\n//\n// loginButtonsChangePassword template\n//\n\nTemplate._loginButtonsChangePassword.events({\n  'keypress #login-old-password, keypress #login-password, keypress #login-password-again': function (event) {\n    if (event.keyCode === 13)\n      changePassword();\n  },\n  'click #login-buttons-do-change-password': function () {\n    changePassword();\n  }\n});\n\nTemplate._loginButtonsChangePassword.fields = function () {\n  return [\n    {fieldName: 'old-password', fieldLabel: 'Current Password', inputType: 'password',\n     visible: function () {\n       return true;\n     }},\n    {fieldName: 'password', fieldLabel: 'New Password', inputType: 'password',\n     visible: function () {\n       return true;\n     }},\n    {fieldName: 'password-again', fieldLabel: 'New Password (again)',\n     inputType: 'password',\n     visible: function () {\n       // No need to make users double-enter their password if\n       // they'll necessarily have an email set, since they can use\n       // the \"forgot password\" flow.\n       return _.contains(\n         [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],\n         passwordSignupFields());\n     }}\n  ];\n};\n\n\n//\n// helpers\n//\n\nvar elementValueById = function(id) {\n  var element = document.getElementById(id);\n  if (!element)\n    return null;\n  else\n    return element.value;\n};\n\nvar trimmedElementValueById = function(id) {\n  var element = document.getElementById(id);\n  if (!element)\n    return null;\n  else\n    return element.value.replace(/^\\s*|\\s*$/g, \"\"); // trim() doesn't work on IE8;\n};\n\nvar loginOrSignup = function () {\n  if (loginButtonsSession.get('inSignupFlow'))\n    signup();\n  else\n    login();\n};\n\nvar login = function () {\n  loginButtonsSession.resetMessages();\n\n  var username = trimmedElementValueById('login-username');\n  var email = trimmedElementValueById('login-email');\n  var usernameOrEmail = trimmedElementValueById('login-username-or-email');\n  // notably not trimmed. a password could (?) start or end with a space\n  var password = elementValueById('login-password');\n\n  var loginSelector;\n  if (username !== null) {\n    if (!validateUsername(username))\n      return;\n    else\n      loginSelector = {username: username};\n  } else if (email !== null) {\n    if (!validateEmail(email))\n      return;\n    else\n      loginSelector = {email: email};\n  } else if (usernameOrEmail !== null) {\n    // XXX not sure how we should validate this. but this seems good enough (for now),\n    // since an email must have at least 3 characters anyways\n    if (!validateUsername(usernameOrEmail))\n      return;\n    else\n      loginSelector = usernameOrEmail;\n  } else {\n    throw new Error(\"Unexpected -- no element to use as a login user selector\");\n  }\n\n  Meteor.loginWithPassword(loginSelector, password, function (error, result) {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.closeDropdown();\n    }\n  });\n};\n\nvar signup = function () {\n  loginButtonsSession.resetMessages();\n\n  var options = {}; // to be passed to Accounts.createUser\n\n  var username = trimmedElementValueById('login-username');\n  if (username !== null) {\n    if (!validateUsername(username))\n      return;\n    else\n      options.username = username;\n  }\n\n  var email = trimmedElementValueById('login-email');\n  if (email !== null) {\n    if (!validateEmail(email))\n      return;\n    else\n      options.email = email;\n  }\n\n  // notably not trimmed. a password could (?) start or end with a space\n  var password = elementValueById('login-password');\n  if (!validatePassword(password))\n    return;\n  else\n    options.password = password;\n\n  if (!matchPasswordAgainIfPresent())\n    return;\n\n  Accounts.createUser(options, function (error) {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.closeDropdown();\n    }\n  });\n};\n\nvar forgotPassword = function () {\n  loginButtonsSession.resetMessages();\n\n  var email = trimmedElementValueById(\"forgot-password-email\");\n  if (email.indexOf('@') !== -1) {\n    Accounts.forgotPassword({email: email}, function (error) {\n      if (error)\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      else\n        loginButtonsSession.infoMessage(\"Email sent\");\n    });\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n  }\n};\n\nvar changePassword = function () {\n  loginButtonsSession.resetMessages();\n\n  // notably not trimmed. a password could (?) start or end with a space\n  var oldPassword = elementValueById('login-old-password');\n\n  // notably not trimmed. a password could (?) start or end with a space\n  var password = elementValueById('login-password');\n  if (!validatePassword(password))\n    return;\n\n  if (!matchPasswordAgainIfPresent())\n    return;\n\n  Accounts.changePassword(oldPassword, password, function (error) {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.set('inChangePasswordFlow', false);\n      loginButtonsSession.set('inMessageOnlyFlow', true);\n      loginButtonsSession.infoMessage(\"Password changed\");\n    }\n  });\n};\n\nvar matchPasswordAgainIfPresent = function () {\n  // notably not trimmed. a password could (?) start or end with a space\n  var passwordAgain = elementValueById('login-password-again');\n  if (passwordAgain !== null) {\n    // notably not trimmed. a password could (?) start or end with a space\n    var password = elementValueById('login-password');\n    if (password !== passwordAgain) {\n      loginButtonsSession.errorMessage(\"Passwords don't match\");\n      return false;\n    }\n  }\n  return true;\n};\n\nvar correctDropdownZIndexes = function () {\n  // IE <= 7 has a z-index bug that means we can't just give the\n  // dropdown a z-index and expect it to stack above the rest of\n  // the page even if nothing else has a z-index.  The nature of\n  // the bug is that all positioned elements are considered to\n  // have z-index:0 (not auto) and therefore start new stacking\n  // contexts, with ties broken by page order.\n  //\n  // The fix, then is to give z-index:1 to all ancestors\n  // of the dropdown having z-index:0.\n  for(var n = document.getElementById('login-dropdown-list').parentNode;\n      n.nodeName !== 'BODY';\n      n = n.parentNode)\n    if (n.style.zIndex === 0)\n      n.style.zIndex = 1;\n};\n","// for convenience\nvar loginButtonsSession = Accounts._loginButtonsSession;\n\n\n//\n// populate the session so that the appropriate dialogs are\n// displayed by reading variables set by accounts-urls, which parses\n// special URLs. since accounts-ui depends on accounts-urls, we are\n// guaranteed to have these set at this point.\n//\n\nif (Accounts._resetPasswordToken) {\n  loginButtonsSession.set('resetPasswordToken', Accounts._resetPasswordToken);\n}\n\nif (Accounts._enrollAccountToken) {\n  loginButtonsSession.set('enrollAccountToken', Accounts._enrollAccountToken);\n}\n\n// Needs to be in Meteor.startup because of a package loading order\n// issue. We can't be sure that accounts-password is loaded earlier\n// than accounts-ui so Accounts.verifyEmail might not be defined.\nMeteor.startup(function () {\n  if (Accounts._verifyEmailToken) {\n    Accounts.verifyEmail(Accounts._verifyEmailToken, function(error) {\n      Accounts._enableAutoLogin();\n      if (!error)\n        loginButtonsSession.set('justVerifiedEmail', true);\n      // XXX show something if there was an error.\n    });\n  }\n});\n\n\n//\n// resetPasswordDialog template\n//\n\nTemplate._resetPasswordDialog.events({\n  'click #login-buttons-reset-password-button': function () {\n    resetPassword();\n  },\n  'keypress #reset-password-new-password': function (event) {\n    if (event.keyCode === 13)\n      resetPassword();\n  },\n  'click #login-buttons-cancel-reset-password': function () {\n    loginButtonsSession.set('resetPasswordToken', null);\n    Accounts._enableAutoLogin();\n  }\n});\n\nvar resetPassword = function () {\n  loginButtonsSession.resetMessages();\n  var newPassword = document.getElementById('reset-password-new-password').value;\n  if (!validatePassword(newPassword))\n    return;\n\n  Accounts.resetPassword(\n    loginButtonsSession.get('resetPasswordToken'), newPassword,\n    function (error) {\n      if (error) {\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      } else {\n        loginButtonsSession.set('resetPasswordToken', null);\n        Accounts._enableAutoLogin();\n      }\n    });\n};\n\nTemplate._resetPasswordDialog.inResetPasswordFlow = function () {\n  return loginButtonsSession.get('resetPasswordToken');\n};\n\n\n//\n// enrollAccountDialog template\n//\n\nTemplate._enrollAccountDialog.events({\n  'click #login-buttons-enroll-account-button': function () {\n    enrollAccount();\n  },\n  'keypress #enroll-account-password': function (event) {\n    if (event.keyCode === 13)\n      enrollAccount();\n  },\n  'click #login-buttons-cancel-enroll-account': function () {\n    loginButtonsSession.set('enrollAccountToken', null);\n    Accounts._enableAutoLogin();\n  }\n});\n\nvar enrollAccount = function () {\n  loginButtonsSession.resetMessages();\n  var password = document.getElementById('enroll-account-password').value;\n  if (!validatePassword(password))\n    return;\n\n  Accounts.resetPassword(\n    loginButtonsSession.get('enrollAccountToken'), password,\n    function (error) {\n      if (error) {\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      } else {\n        loginButtonsSession.set('enrollAccountToken', null);\n        Accounts._enableAutoLogin();\n      }\n    });\n};\n\nTemplate._enrollAccountDialog.inEnrollAccountFlow = function () {\n  return loginButtonsSession.get('enrollAccountToken');\n};\n\n\n//\n// justVerifiedEmailDialog template\n//\n\nTemplate._justVerifiedEmailDialog.events({\n  'click #just-verified-dismiss-button': function () {\n    loginButtonsSession.set('justVerifiedEmail', false);\n  }\n});\n\nTemplate._justVerifiedEmailDialog.visible = function () {\n  return loginButtonsSession.get('justVerifiedEmail');\n};\n\n\n//\n// loginButtonsMessagesDialog template\n//\n\nTemplate._loginButtonsMessagesDialog.events({\n  'click #messages-dialog-dismiss-button': function () {\n    loginButtonsSession.resetMessages();\n  }\n});\n\nTemplate._loginButtonsMessagesDialog.visible = function () {\n  var hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\n  return !dropdown() && hasMessage;\n};\n\n\n//\n// configureLoginServiceDialog template\n//\n\nTemplate._configureLoginServiceDialog.events({\n  'click .configure-login-service-dismiss-button': function () {\n    loginButtonsSession.set('configureLoginServiceDialogVisible', false);\n  },\n  'click #configure-login-service-dialog-save-configuration': function () {\n    if (loginButtonsSession.get('configureLoginServiceDialogVisible') &&\n        ! loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\n      // Prepare the configuration document for this login service\n      var serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n      var configuration = {\n        service: serviceName\n      };\n\n      // Fetch the value of each input field\n      _.each(configurationFields(), function(field) {\n        configuration[field.property] = document.getElementById(\n          'configure-login-service-dialog-' + field.property).value\n          .replace(/^\\s*|\\s*$/g, \"\"); // trim() doesnt work on IE8;\n      });\n\n      // Configure this login service\n      Accounts.connection.call(\n        \"configureLoginService\", configuration, function (error, result) {\n          if (error)\n            Meteor._debug(\"Error configuring login service \" + serviceName,\n                          error);\n          else\n            loginButtonsSession.set('configureLoginServiceDialogVisible',\n                                    false);\n        });\n    }\n  },\n  // IE8 doesn't support the 'input' event, so we'll run this on the keyup as\n  // well. (Keeping the 'input' event means that this also fires when you use\n  // the mouse to change the contents of the field, eg 'Cut' menu item.)\n  'input, keyup input': function (event) {\n    // if the event fired on one of the configuration input fields,\n    // check whether we should enable the 'save configuration' button\n    if (event.target.id.indexOf('configure-login-service-dialog') === 0)\n      updateSaveDisabled();\n  }\n});\n\n// check whether the 'save configuration' button should be enabled.\n// this is a really strange way to implement this and a Forms\n// Abstraction would make all of this reactive, and simpler.\nvar updateSaveDisabled = function () {\n  var anyFieldEmpty = _.any(configurationFields(), function(field) {\n    return document.getElementById(\n      'configure-login-service-dialog-' + field.property).value === '';\n  });\n\n  loginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\n};\n\n// Returns the appropriate template for this login service.  This\n// template should be defined in the service's package\nvar configureLoginServiceDialogTemplateForService = function () {\n  var serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n  // XXX Service providers should be able to specify their configuration\n  // template name.\n  return Template['configureLoginServiceDialogFor' +\n                  (serviceName === 'meteor-developer' ?\n                   'MeteorDeveloper' :\n                   capitalize(serviceName))];\n};\n\nvar configurationFields = function () {\n  var template = configureLoginServiceDialogTemplateForService();\n  return template.fields();\n};\n\nTemplate._configureLoginServiceDialog.configurationFields = function () {\n  return configurationFields();\n};\n\nTemplate._configureLoginServiceDialog.visible = function () {\n  return loginButtonsSession.get('configureLoginServiceDialogVisible');\n};\n\nTemplate._configureLoginServiceDialog.configurationSteps = function () {\n  // renders the appropriate template\n  return configureLoginServiceDialogTemplateForService();\n};\n\nTemplate._configureLoginServiceDialog.saveDisabled = function () {\n  return loginButtonsSession.get('configureLoginServiceDialogSaveDisabled');\n};\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nvar capitalize = function(str){\n  str = str == null ? '' : String(str);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n"]}